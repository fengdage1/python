from spider import spider
from pytube import YouTube
from bs4 import BeautifulSoup
from oss import oss
from PIL import Image
from http.server import HTTPServer, BaseHTTPRequestHandler
import io, shutil
import configparser,os,json,re,time,inspect,sys,socket,pymysql,http.cookiejar,urllib.request,gzip,oss2,imghdr
DIR = os.path.split(os.path.realpath(__file__))[0] #末尾不带\
SPI_MODLE = 'NEW'
LAST_SPI = None
PAGE = '1'
SPI_TOTAL = 0
START_TIME = 0
MAX_RUNTIME = 3600 * 3


class youtubeSpider(spider):
    def __init__(self):
        self.connectDB('apptupian', 'apptupian!@#qweASD', '118.184.47.33', 'db_meinvpic')
        timeout = 30
        socket.setdefaulttimeout(timeout)
        self.oss = oss('flsp')
        self.httpHeader = {
                    'Connection': 'keep-alive',
                    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36',
                    'Accept-Encoding': 'gzip, deflate, sdch, br',
                    'Accept-Language': 'zh-CN,zh;q=0.8'}
        self.userList=[
            'https://www.youtube.com/channel/UCR0WzpobfNj4cVjYZX_eMAg/videos',
            'https://www.youtube.com/channel/UC_SlD1g8Hq1jcDWuNXOK04g/videos',
            'https://www.youtube.com/channel/UCQ41RepGu632yz8uMKnn1vA/videos'
        ]
        #self.initRequest('https://www.youtube.com')

    def getData(self):
        dom = BeautifulSoup(self.html, "html.parser")
        more = dom.find('button', attrs={'class': 'yt-uix-button yt-uix-button-size-default yt-uix-button-default load-more-button yt-uix-load-more browse-items-load-more-button'})
        if more == None:
            moreHref = ''
        else:
            moreHref = 'https://www.youtube.com' + more['data-uix-load-more-href']
        videoList = []
        videos = dom.findAll('div', attrs={'class': 'yt-lockup-thumbnail'})
        for i in videos:
            a = i.find('a')
            if a == None:
                continue
            videoList.append('https://www.youtube.com' + a['href'])
        while True:
            html = self.getHtml(moreHref, self.httpHeader, True)
            try:
                data = json.loads(html)
            except Exception as e:
                return videoList
            dom = BeautifulSoup(data['content_html'],"html.parser")
            videos = dom.findAll('div', attrs={'class': 'yt-lockup-thumbnail'})
            for i in videos:
                a = i.find('a')
                if a == None:
                    continue
                videoList.append('https://www.youtube.com' + a['href'])
            dom = BeautifulSoup(data['load_more_widget_html'], "html.parser")
            more = dom.find('button', attrs={'class': 'yt-uix-button yt-uix-button-size-default yt-uix-button-default load-more-button yt-uix-load-more browse-items-load-more-button'})
            if more == None:
                break
            moreHref = 'https://www.youtube.com' + more['data-uix-load-more-href']
        return videoList

    def getVideoByUrl(self,url):
        try:
            yt = YouTube(url)
        except Exception as e:
            return False, '无效id,line:' + str(self.lineno())
        id = yt.video_id
        if id == None or id == '':
            return False, '无效id,line:' + str(self.lineno())
        try:
            with self.conn.cursor() as cursor:
                sql = 'select alias from ak_video_items where alias = "%s"' % (id)
                count = cursor.execute(sql)
                if count != 0:
                    cursor.close()
                    return False, '该视频已存在,line:' + str(self.lineno())
        except Exception as e:
            cursor.close()
            return False, '未知错误,line:' + str(self.lineno())
        source = url
        name = yt.filename
        remote = id + '.mp4'
        local = 'd:\\flsp\\upload\\video\\' + remote
        yt.set_filename(remote)
        video = yt.get('mp4', '360p')
        if os.path.isfile(local) == True:
            try:
                os.remove(local)
            except Exception as e:
                return False, '未知错误,line:' + str(self.lineno())
        try:
            video.download(local)
        except Exception as e:
            return False, '下载视频失败,line:' + str(self.lineno())
        self.oss.upLoad('video/' + remote, local)
        if os.path.isfile(DIR + '\\out1.jpg') == True:
            try:
                os.remove(DIR + '\\out1.jpg')
            except Exception as e:
                pass
        self.shell(DIR + '\\ffmpeg.exe -ss 00:00:00 -i ' + local + ' -frames:v 1 ' + DIR + '\\out1.jpg')
        videoSize = Image.open(DIR + '\\out1.jpg').size
        try:
            with self.conn.cursor() as cursor:
                sql = 'insert into ak_video_items (source,title,alias,pv7,pv8,bigpicture,str2,category) values ("%s","%s","%s",%d,%d,"%s","%s",%d)' % (
                    url, name, id, videoSize[0], videoSize[1], 'upload/video/' + remote, 'video/' + remote, 210)
                count = cursor.execute(sql)
                self.conn.commit()
        except Exception as e:
            cursor.close()
            return False, '存储失败,line:' + str(self.lineno())
        finally:
            cursor.close()
        print(name + ' 采集成功')
        return True,'采集成功'

    def getVideoList(self,user):
        html = self.getHtml(user, self.httpHeader, True)
        dom = BeautifulSoup(html, "html.parser")
        has = dom.findAll('div',attrs={'class': 'yt-alert-message'})
        for h in has:
            if '此频道不存在' in h.text:
                return False
        more = dom.find('button', attrs={
            'class': 'yt-uix-button yt-uix-button-size-default yt-uix-button-default load-more-button yt-uix-load-more browse-items-load-more-button'})
        if more == None:
            moreHref = ''
        else:
            moreHref = 'https://www.youtube.com' + more['data-uix-load-more-href']
        videoList = []
        videos = dom.findAll('div', attrs={'class': 'yt-lockup-thumbnail'})
        for i in videos:
            a = i.find('a')
            if a == None:
                continue
            videoList.append('https://www.youtube.com' + a['href'])
        if moreHref == '':
            return
        while True:
            html = self.getHtml(moreHref, self.httpHeader, True)
            try:
                data = json.loads(html)
            except Exception as e:
                return videoList
            dom = BeautifulSoup(data['content_html'], "html.parser")
            videos = dom.findAll('div', attrs={'class': 'yt-lockup-thumbnail'})
            for i in videos:
                a = i.find('a')
                if a == None:
                    continue
                videoList.append('https://www.youtube.com' + a['href'])
            dom = BeautifulSoup(data['load_more_widget_html'], "html.parser")
            more = dom.find('button', attrs={
                'class': 'yt-uix-button yt-uix-button-size-default yt-uix-button-default load-more-button yt-uix-load-more browse-items-load-more-button'})
            if more == None:
                break
            moreHref = 'https://www.youtube.com' + more['data-uix-load-more-href']
        return videoList

    def getVideoByUser(self,user):
        videoList = self.getVideoList(user)
        if videoList == False:
            print('该频道不存在')
            return False
        for i in videoList:
            self.getVideoByUrl(i)

    def doData(self,list):
        for i in list:
            self.getVideoByUrl(i)




    def run(self):
        for user in self.userList:
            self.html = self.getHtml(user, self.httpHeader, True)
            if self.html == False:
                continue
            self.doData(self.getData())

class MyHttpHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        if '/script/getbyid.html' in self.path.lower():
            file_object = open(DIR+'\\getbyid.html')
            try:
                r_str = file_object.read()
            finally:
                file_object.close()
        elif '/script/getbyuser.html' in self.path:
            file_object = open(DIR+'\\getbyid.html')
            try:
                r_str = file_object.read()
            finally:
                file_object.close()
        enc = "UTF-8"
        encoded = ''.join(r_str).encode(enc)
        f = io.BytesIO()
        f.write(encoded)
        f.seek(0)
        self.send_response(200)
        self.send_header("Content-type", "text/html; charset=%s" % enc)
        self.send_header("Content-Length", str(len(encoded)))
        self.end_headers()
        shutil.copyfileobj(f, self.wfile)

    def do_POST(self):
        content = self.rfile.read(int(self.headers['content-length'])).decode()
        if content.find('id=') == 0:
            id = content[len('id='):]
            flsp = youtubeSpider()
            url = 'https://www.youtube.com/watch?v='+ id
            re,msg = flsp.getVideoByUrl(url)
            enc = "UTF-8"
            encoded = ''.join(
                '<html><script>alert("'+msg+'");window.location.href = "http://img.chzred.com:8080/script/getbyid.html";</script></html>').encode(
                enc)
            f = io.BytesIO()
            f.write(encoded)
            f.seek(0)
            self.send_response(200)
            self.send_header("Content-type", "text/html; charset=%s" % enc)
            self.send_header("Content-Length", str(len(encoded)))
            self.end_headers()
            shutil.copyfileobj(f, self.wfile)
        elif content.find('user=') == 0:
            user = content[len('user='):]
            pass
        else:
            pass
        pass

if "__main__" == __name__:
    httpd = HTTPServer(('', 8080), MyHttpHandler)
    print("Server started on 127.0.0.1,port 8080.....")
    httpd.serve_forever()
